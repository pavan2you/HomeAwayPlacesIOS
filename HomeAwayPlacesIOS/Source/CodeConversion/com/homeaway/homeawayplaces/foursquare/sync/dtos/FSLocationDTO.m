//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/homeaway/homeawayplaces/foursquare/sync/dtos/FSLocationDTO.java
//
//

#import "FSLocationDTO.h"

@implementation FSLocationDTO

static NSString * CLASS_NAME_;

@synthesize CRUDOperation = CRUDOperation_;
@synthesize address = address_;
@synthesize crossStreet = crossStreet_;
@synthesize lat = lat_;
@synthesize lng = lng_;
@synthesize distance = distance_;
@synthesize postalCode = postalCode_;
@synthesize cc = cc_;
@synthesize city = city_;
@synthesize state = state_;
@synthesize country = country_;
@synthesize formattedAddress = formattedAddress_;
@synthesize entity_uuid = entity_uuid_;

+ (NSString *)CLASS_NAME {
  return CLASS_NAME_;
}

- (id)init {
  if ((self = [super init])) {
    CRUDOperation_ = @"U";
  }
  return self;
}

- (void)setCSVRepresentationOfformattedAddressWithNSString:(NSString *)csvformattedAddress
                                              withNSString:(NSString *)delimiter {
  if (csvformattedAddress != nil) {
    id<IStringUtils> stringUtils = [((id<IPlatformFactory>) [PlatformFactoryLocator getPlatformFactory]) getStringUtils];
    formattedAddress_ = [stringUtils splitXWithYWithNSString:csvformattedAddress withNSString:delimiter];
  }
}

- (NSString *)getCSVRepresentationOfformattedAddressWithNSString:(NSString *)delimiter {
  id<IStringUtils> stringUtils = [((id<IPlatformFactory>) [PlatformFactoryLocator getPlatformFactory]) getStringUtils];
  return [stringUtils toCSVStringWithIGenericList:formattedAddress_ withNSString:delimiter];
}

+ (void)initialize {
  if (self == [FSLocationDTO class]) {
    {
      CLASS_NAME_ = NSStringFromClass([FSLocationDTO class]);
    }
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  
  FSLocationDTO *typedCopy = (FSLocationDTO *) copy;
  typedCopy.CRUDOperation = CRUDOperation_;
  typedCopy.address = address_;
  typedCopy.crossStreet = crossStreet_;
  typedCopy.lat = lat_;
  typedCopy.lng = lng_;
  typedCopy.distance = distance_;
  typedCopy.postalCode = postalCode_;
  typedCopy.cc = cc_;
  typedCopy.city = city_;
  typedCopy.state = state_;
  typedCopy.country = country_;
  typedCopy.formattedAddress = formattedAddress_;
  typedCopy.entity_uuid = entity_uuid_;
}

@end
