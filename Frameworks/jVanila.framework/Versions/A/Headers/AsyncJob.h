//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/jvanila/mobile/job/AsyncJob.java
//
//

@class AsyncToken;
@class JobState;
@protocol IAsyncTokenResultCallback;

#import "Emulation.h"
#import "VanilaObject.h"
#import "IAsyncJob.h"

@interface AsyncJob : VanilaObject < IAsyncJob > {
 @public
  id<IAsyncJob> mNextJob_;
  long long int mJobId_;
  int mDelay_;
  int mPeriodicInterval_;
  BOOL mCanExecuteInParallel_;
  int mPriority_;
  NSString *mJobFamily_;
  BOOL mIsForegroundJob_;
  BOOL mIsIOJob_;
  BOOL mIsBgFgJob_;
  BOOL mIsNetworkJob_;
  NSString *mNotifyOnThread_;
  NSString *mProcessOnThread_;
  AsyncToken *mToken_;
  JobState *mState_;
  id mTag_;
  NSString *mLogTag_;
}

@property (nonatomic, strong) id<IAsyncJob> mNextJob;
@property (nonatomic, assign) long long int mJobId;
@property (nonatomic, assign) int mDelay;
@property (nonatomic, assign) int mPeriodicInterval;
@property (nonatomic, assign) BOOL mCanExecuteInParallel;
@property (nonatomic, assign) int mPriority;
@property (nonatomic, copy) NSString *mJobFamily;
@property (nonatomic, assign) BOOL mIsForegroundJob;
@property (nonatomic, assign) BOOL mIsIOJob;
@property (nonatomic, assign) BOOL mIsBgFgJob;
@property (nonatomic, assign) BOOL mIsNetworkJob;
@property (nonatomic, copy) NSString *mNotifyOnThread;
@property (nonatomic, copy) NSString *mProcessOnThread;
@property (nonatomic, strong) AsyncToken *mToken;
@property (nonatomic, strong) JobState *mState;
@property (nonatomic, strong) id mTag;
@property (nonatomic, copy) NSString *mLogTag;

- (id)init;
- (id<IAsyncJob>)getNext;
- (BOOL)hasNext;
- (id<IAsyncJob>)thenDoWithIAsyncJob:(id<IAsyncJob>)nextJob;
- (void)setIsForegroundJobWithBOOL:(BOOL)doInForeground;
- (BOOL)isForegroundJob;
- (void)setIsBgFgJobWithBOOL:(BOOL)isBgFgJob;
- (BOOL)isBgFgJob;
- (void)setIsIOJobWithBOOL:(BOOL)isIOJob;
- (BOOL)isIOJob;
- (void)setIsNetworkJobWithBOOL:(BOOL)isNetworkJob;
- (BOOL)isNetworkJob;
- (void)setDelayWithInt:(int)delay;
- (int)getDelay;
- (void)setCanExecuteInParallelWithBOOL:(BOOL)parallel;
- (BOOL)canExecuteInParallel;
- (void)setPeriodicIntervalWithInt:(int)period;
- (int)getPeriodicInterval;
- (AsyncToken *)post;
- (AsyncToken *)postWithIAsyncTokenResultCallback:(id<IAsyncTokenResultCallback>)callback;
- (AsyncToken *)postCancelled;
- (AsyncToken *)postCancelledWithIAsyncTokenResultCallback:(id<IAsyncTokenResultCallback>)callback;
- (AsyncToken *)getToken;
- (void)cancel;
- (BOOL)isCancelled;
- (BOOL)isFinished;
- (void)setStateWithJobState:(JobState *)state;
- (JobState *)getState;
- (void)setProcessOnThreadWithNSString:(NSString *)threadName;
- (NSString *)getProcessOnThread;
- (NSString *)getNotifyOnThread;
- (void)setNotifyOnThreadWithNSString:(NSString *)jobRouterThreadName;
- (void)setJobFamilyWithNSString:(NSString *)jobFamily;
- (NSString *)getJobFamily;
- (void)setPriorityWithInt:(int)priority;
- (int)getPriority;
- (void)setJobIdWithLongInt:(long long int)id_;
- (long long int)getJobId;
- (void)setTagWithId:(id)tag;
- (id)getTag;
- (void)setLogTagWithNSString:(NSString *)logTag;
- (NSString *)getLogTag;
- (int)compareToWithId:(id<IAsyncJob>)o;
@end

typedef AsyncJob ComJvanilaMobileJobAsyncJob;
